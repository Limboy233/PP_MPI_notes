{
	"nodes":[
		{"id":"7b37d1f7df5bb481","type":"text","text":"C++并行编程","x":-320,"y":-60,"width":160,"height":60},
		{"id":"2364a8f1e804f980","type":"text","text":"多线程编程","x":-42,"y":-266,"width":162,"height":60},
		{"id":"45f0b75de362594a","type":"text","text":"OpenMP 技术","x":-42,"y":-121,"width":182,"height":60},
		{"id":"9dce6a1a1a906c70","type":"text","text":"MPI 消息传递标准规范(里面只有接口我们要实现它)","x":-42,"y":0,"width":250,"height":60},
		{"id":"4beb2488c7372b66","type":"text","text":"CUDA","x":-42,"y":120,"width":250,"height":60},
		{"id":"671c201f569a4da8","type":"text","text":"TBB","x":-42,"y":240,"width":250,"height":60},
		{"id":"c82be79df133ff59","type":"text","text":"OpenCL","x":-42,"y":360,"width":250,"height":60},
		{"id":"eddca30bb2932ef8","type":"text","text":"使用 C++11 标准中的 std::thread 类或 POSIX 线程库来创建多个线程，实现并行计算。","x":340,"y":-266,"width":250,"height":60},
		{"id":"90118c6b676f0e5d","type":"text","text":"OpenMP 是一种基于共享内存的并行编程模型，可以使用 C++ 编写并行程序。OpenMP 提供了一组指令和库函数，可以在程序中标记并行区域，让编译器自动将其转换为多线程代码","x":340,"y":-151,"width":250,"height":60},
		{"id":"0d4622a5a7594582","type":"text","text":"MPI 是一种基于消息传递的并行编程模型，可以在多台计算机之间进行[并行计算](https://so.csdn.net/so/search?q=%E5%B9%B6%E8%A1%8C%E8%AE%A1%E7%AE%97&spm=1001.2101.3001.7020)。C++ 中可以使用 MPI 库来实现并行计算。","x":340,"y":0,"width":250,"height":60},
		{"id":"e4ad344556589c95","type":"text","text":"CUDA 是 NVIDIA 公司开发的一种并行计算平台，可以使用 C++ 编写 GPU 加速的并行程序","x":340,"y":120,"width":250,"height":60},
		{"id":"9ca5727cd30e4f7c","type":"text","text":"Intel 公司开发的 TBB（Threading Building Blocks）是一个 C++ 并行编程库，提供了一组高级的并行算法和数据结构，可以简化并行编程的复杂度","x":340,"y":240,"width":250,"height":60},
		{"id":"3cb6741a63f2d2d6","type":"text","text":"OpenCL 是一种跨平台的并行编程框架，可以使用 C++ 编写并行程序，支持多种硬件加速器，包括 CPU、GPU、FPGA 等。","x":340,"y":360,"width":250,"height":60},
		{"id":"bbf5f213f0980170","type":"text","text":"OpenMPI ","x":1040,"y":-150,"width":140,"height":59},
		{"id":"cdb972a2c1c9f385","type":"text","text":"[OpenMPI官方文档](https://www.open-mpi.org/doc/current/)","x":1320,"y":-151,"width":250,"height":60},
		{"id":"48b6490ca196bcb5","type":"text","text":"Lam","x":1055,"y":5,"width":100,"height":50},
		{"id":"131e6878f8961615","type":"text","text":"Chimp","x":1055,"y":95,"width":250,"height":60},
		{"id":"6464b5cbf5f364aa","type":"text","text":"==Mpich==(**我们这次学习的**)","x":1055,"y":210,"width":250,"height":60},
		{"id":"85b6bdbd6c470cc2","type":"text","text":"(**我们通过这个来学习**)[MPI Tutorial](https://mpitutorial.com/tutorials/)","x":1445,"y":210,"width":250,"height":60},
		{"id":"bcf2d9b135b09b50","type":"text","text":"我们还拥有其他类型的模型","x":-419,"y":723,"width":250,"height":60},
		{"id":"6ea09185d11e0e56","type":"text","text":"RPC(Remote Procedure Calls )","x":-780,"y":722,"width":240,"height":60},
		{"id":"405bd4a9be81a5fb","type":"text","text":"MPI(Message-Passing Interface )","x":-790,"y":600,"width":250,"height":60},
		{"id":"61d15c19c26d820a","type":"text","text":"Distributed Shared Memory","x":-784,"y":834,"width":250,"height":60},
		{"id":"7d747c44a57bf102","type":"text","text":"他们的区别可以参考论文:[Message Passing, Remote Procedure Calls and Distributed Shared Memory as Communication Paradigms for Distributed Systems](https://link.zhihu.com/?target=http%3A//citeseerx.ist.psu.edu/viewdoc/download%3Fdoi%3D10.1.1.95.2490%26rep%3Drep1%26type%3Dpdf)","x":-1140,"y":722,"width":250,"height":60},
		{"id":"e3646ff16e90177d","type":"text","text":"对我们而言最重要的只有三个部分，也对应着 [MPI 文档](https://link.zhihu.com/?target=https%3A//www.mpi-forum.org/docs/mpi-3.1/mpi31-report.pdf) 中的第三和第五章节：端到端通信，数据类型，和集合通信（Collective Communication）","x":610,"y":620,"width":283,"height":140},
		{"id":"9520d70814ad21eb","type":"text","text":"[MPI消息传递标准的文档](https://www.mpi-forum.org/)","x":805,"y":440,"width":250,"height":50},
		{"id":"0ec8234a99c9b1b5","type":"text","text":"[**MPI架构模型**](https://blog.csdn.net/qq_40765537/article/details/106425355)","x":1252,"y":437,"width":148,"height":53},
		{"id":"20e79b7ed7c70995","x":854,"y":-264,"width":250,"height":60,"type":"text","text":"[简易介绍](https://blog.csdn.net/qq_44133543/article/details/127152062)"}
	],
	"edges":[
		{"id":"33c37f6538b82c87","fromNode":"2364a8f1e804f980","fromSide":"right","toNode":"eddca30bb2932ef8","toSide":"left"},
		{"id":"601f2819908d20d4","fromNode":"45f0b75de362594a","fromSide":"right","toNode":"90118c6b676f0e5d","toSide":"left"},
		{"id":"983b447d4d565933","fromNode":"9dce6a1a1a906c70","fromSide":"right","toNode":"0d4622a5a7594582","toSide":"left"},
		{"id":"189de8572b3750c3","fromNode":"4beb2488c7372b66","fromSide":"right","toNode":"e4ad344556589c95","toSide":"left"},
		{"id":"28fc3b4a2d5cdd47","fromNode":"671c201f569a4da8","fromSide":"right","toNode":"9ca5727cd30e4f7c","toSide":"left"},
		{"id":"df6a3898acf3af07","fromNode":"c82be79df133ff59","fromSide":"right","toNode":"3cb6741a63f2d2d6","toSide":"left"},
		{"id":"ed127fd1699e4d54","fromNode":"bbf5f213f0980170","fromSide":"right","toNode":"cdb972a2c1c9f385","toSide":"left"},
		{"id":"e484f63b8a24a99c","fromNode":"0d4622a5a7594582","fromSide":"right","toNode":"9520d70814ad21eb","toSide":"left"},
		{"id":"94f0a86c849a7be2","fromNode":"0d4622a5a7594582","fromSide":"right","toNode":"bbf5f213f0980170","toSide":"left","label":"MPI 是定义，是接口，而 OpenMPI,Mpich,Chimp,Lam则是这一接口的对应实现"},
		{"id":"bdfd8e3df70044ca","fromNode":"0d4622a5a7594582","fromSide":"right","toNode":"48b6490ca196bcb5","toSide":"left"},
		{"id":"4af4e0b2cf60a353","fromNode":"0d4622a5a7594582","fromSide":"right","toNode":"131e6878f8961615","toSide":"left"},
		{"id":"e04d41f433cc1a63","fromNode":"0d4622a5a7594582","fromSide":"right","toNode":"6464b5cbf5f364aa","toSide":"left"},
		{"id":"cf920e9ae923fadf","fromNode":"6464b5cbf5f364aa","fromSide":"right","toNode":"85b6bdbd6c470cc2","toSide":"left"},
		{"id":"69429678ce910753","fromNode":"7b37d1f7df5bb481","fromSide":"right","toNode":"2364a8f1e804f980","toSide":"left"},
		{"id":"9530b383a1436293","fromNode":"7b37d1f7df5bb481","fromSide":"right","toNode":"45f0b75de362594a","toSide":"left"},
		{"id":"16f2f2ac19469c6e","fromNode":"7b37d1f7df5bb481","fromSide":"right","toNode":"9dce6a1a1a906c70","toSide":"left"},
		{"id":"62696520a9acd8e0","fromNode":"7b37d1f7df5bb481","fromSide":"right","toNode":"4beb2488c7372b66","toSide":"left"},
		{"id":"9613728ec4f3c442","fromNode":"7b37d1f7df5bb481","fromSide":"right","toNode":"671c201f569a4da8","toSide":"left"},
		{"id":"c00e5265c8fa7ad6","fromNode":"7b37d1f7df5bb481","fromSide":"right","toNode":"c82be79df133ff59","toSide":"left"},
		{"id":"6ef0317adf6ef5b8","fromNode":"9dce6a1a1a906c70","fromSide":"left","toNode":"bcf2d9b135b09b50","toSide":"right"},
		{"id":"b00780a3d7541386","fromNode":"bcf2d9b135b09b50","fromSide":"left","toNode":"6ea09185d11e0e56","toSide":"right"},
		{"id":"b75853e1d61719ac","fromNode":"bcf2d9b135b09b50","fromSide":"left","toNode":"405bd4a9be81a5fb","toSide":"right"},
		{"id":"93db238c75415173","fromNode":"bcf2d9b135b09b50","fromSide":"left","toNode":"61d15c19c26d820a","toSide":"right"},
		{"id":"46e2b126b2fa6540","fromNode":"405bd4a9be81a5fb","fromSide":"left","toNode":"7d747c44a57bf102","toSide":"right"},
		{"id":"53a80d3b3326ec3d","fromNode":"6ea09185d11e0e56","fromSide":"left","toNode":"7d747c44a57bf102","toSide":"right"},
		{"id":"1528da0418451e0e","fromNode":"61d15c19c26d820a","fromSide":"left","toNode":"7d747c44a57bf102","toSide":"right"},
		{"id":"22297d2ec28fa6d3","fromNode":"9520d70814ad21eb","fromSide":"bottom","toNode":"e3646ff16e90177d","toSide":"top"},
		{"id":"82329c1fab1ef352","fromNode":"9520d70814ad21eb","fromSide":"right","toNode":"0ec8234a99c9b1b5","toSide":"left"},
		{"id":"0359964de62a28e0","fromNode":"90118c6b676f0e5d","fromSide":"right","toNode":"20e79b7ed7c70995","toSide":"left"}
	]
}